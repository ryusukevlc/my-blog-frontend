{
  "id": 12,
  "title": "テスト12",
  "content": "※メモ程度に書いているので、情報が正確でない可能性があります。\n\n### pnpmはパッケージ管理が厳格である\nnpmでは、package.jsonに記載していないパッケージでもexpressが依存しているパッケージなら使えてしまう。  \n例えば、body-parserというパッケージはexpressが依存しているパッケージなので、npmだとpackage.jsonに記載しなくても使える。\nしかし、pnpmの方はpackage.jsonに記載しているパッケージのみを使用するため、body-parserについてもpackage.jsonに明記しないと使えない。  \nパッケージ管理が厳格であることの利点は、使用しているパッケージはpackage.jsonに必ず記載されているので、何のパッケージを使っているかpackage.jsonを見るだけで把握できる。npmのように暗黙的に使えてしまうパッケージが出てくると、package.jsonに記載していない\nパッケージも使用していることになり、使用しているパッケージをすべて把握しようとすると、それぞれのソースファイルを見ていく必要がある。\n\n\n### pnpmを使うとディスク容量の節約になる\nnpmでインストールするとnpmレジストリからファイルがコピーされる。\nグローバルインストールの場合は1回インストールすれば以降はグローバルで管理されているパッケージから使うようになるが、ローカルインストールだと各プロジェクトで同じパッケージを使用していても、それぞれのプロジェクトでインストールしなくてはいけないため、その分だけ容量を使うことになる。  \n\npnpmは基本的にディスクの１か所で管理し、ローカルインストールすると、１か所で管理しているパッケージのハードリンクをnode_modulesに\n作成するだけなので、ディスク容量の節約になる。\n勿論最初だけPC上にパッケージをインストールすることになるが、以降同じパッケージを使う場合はインストールせずに済むのでnpmやyarnに比べてディスク容量の消費を抑えられる。\n\n### pnpmはインストールが高速\nパッケージマネージャーのinstallには「resolving」、「fetching」、「writing」の３ステージがあり、従来のパッケージマネージャーだと、インストールするパッケージ全てが１ステージを終えないと次のステージに進めなかった。\nそのため、ステージごとの時間は一番遅いパッケージに依存するので、各ステージの最長経路の合計＝インストール時間となっていた。  \n\npnpmでは、パッケージごとにステージが進むので時間がかかるパッケージを待つ必要がなくなり、結果ほかのパッケージマネージャーよりも高速にインストールが完了する。\n\n\n### 所感\nプロジェクトの初めからpnpmを使用するのは良いと思うが、わざわざnpm（もしくはyarn）からpnpmに移行するほどのものではないと感じる。  \ninstallコマンドは開発中に高頻度で使うものではないし、ディスク容量の削減も、プロジェクトが複数でなければ（それもすべてpnpmを使っているプロジェクトでないと）効果は発揮されないのではと思った。\n\n### 参考\n[きちんとわかる、npm installシリーズ（codegrid）](https://www.codegrid.net/articles/2020-npm-install-1/)    \n[今まで知らずにいたnpmスクリプトでできる3つのこと（twilio blog）](https://www.twilio.com/blog/npm-scripts-jp)  \n[pnpm の特徴（zenn）](https://zenn.dev/azukiazusa/articles/pnpm-feature)  \n[npmとyarnとpnpmの違い2021（zenn）](https://zenn.dev/hibikine/articles/27621a7f95e761)  ",
  "isWriting": false,
  "createdAt": "2023-01-12T15:01:29",
  "updatedAt": null,
  "partOfContent": "テストテストテストテストテストテストテストテストテストテストテストテストテストテストテストテストテストテストテストテストテストテストテストテストテストテストテストテストテストテストテストテストテストテストテストテストテストテストテストテストテストテストテストテストテストテストテストテストテストテストテストテストテストテストテストテストテストテストテストテスト",
  "tagList": []
}
